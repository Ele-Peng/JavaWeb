package cn.elle.Model.dao;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.OutputFormat;
import org.dom4j.io.SAXReader;
import org.dom4j.io.XMLWriter;

import cn.elle.Model.domain.Blah;


public class BlahDao {
private String path = "H://blah.xml";
public Blah findByBlahusername(String username){
	//创建解析器
	SAXReader reader = new SAXReader();
	Document doc;
	try {
		doc = reader.read(path);
		//通过xpath查询得到Element
		Element ele = (Element)doc.selectSingleNode("//user[@username='" + username + "']");
		if(ele == null)return null;
		//把ele的数据封装到Blah对象
		Blah blah = new Blah();
		String attrUsername = ele.attributeValue("username");//获取该元素名为username的属性值
		String attrDate = ele.attributeValue("date");
		String attrBlabla = ele.attributeValue("blabla");
		return blah;
	} catch (DocumentException e) {
		throw new RuntimeException(e);
	}
}
public void addBlah(Blah blah){
	SAXReader reader = new SAXReader();
	try {
		//得到Document
		Document doc = reader.read(this.path);
		//得到根元素
		Element root = doc.getRootElement();
		//通过根元素创建新元素
		Element blahEle = root.element("blah");
		//为blahEle创造属性
		blahEle.addAttribute("username", blah.getUsername());
		blahEle.addAttribute("date",blah.getDate() );
		blahEle.addAttribute("blabla", blah.getBlabla());
		//保存文档
		//创建输出格式化器
		OutputFormat format = new OutputFormat("\t", true);//缩进使用/t，是否换行，是
		format.setTrimText(true);//清空原有的缩进和换行
		//创建XMLWriter
		XMLWriter writer;
		try {
			writer = new XMLWriter(
								new OutputStreamWriter(
										new FileOutputStream(this.path),"utf-8"),format);
			writer.write(doc);
			writer.close();
		} catch (Exception e) {
			throw new RuntimeException(e);
		} 
			
	} catch (DocumentException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	
}
}
